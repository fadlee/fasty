version: 2.1
orbs:
  cypress: cypress-io/cypress@1.14.0

executors:
  fasty:
    docker:
      - image: solisoft/fasty
      - image: arangodb/arangodb:3.7.2.1
        environment:
          ARANGO_ROOT_PASSWORD: password
        command: [--server.endpoint=http+tcp://0.0.0.0:8529 --server.password password]

jobs:
  cypress-test:
    executor:
      name: fasty
    steps:
      - run:
          name: 'Install cypress dependencies'
          command: apt-get update -y && apt-get -y install libgtk2.0-0 libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb netcat
      - run:
          name: 'Install foxxy'
          command: npm install -g foxxy && npm install -g foxx-cli
      - run:
          name: 'Add ~/.foxxrc'
          command: echo -e "[server.foxxy]\nurl=http://localhost:8529\nusername=root\npassword=\n\n[server.fasty]\nurl=http://localhost:8529\nusername=root\npassword=password" >> ~/.foxxrc
      - checkout
      - run: cp foxxy/app/js/config.js.sample foxxy/app/js/config.js
      - run: cp config.moon.test config.moon
      - run:
          name: 'Edit nginx.conf'
          command: echo -e "\nuser root root;" >> nginx.conf

      - run:
          name: 'Prepare database'
          command: |
            echo 'db._createDatabase("db_test");' | arangosh --server.endpoint=http+tcp://0.0.0.0:8529 --server.password password
            cd foxxy/
            foxxy upgrade settings --server fasty --database db_test
            foxxy upgrade --server fasty --database db_test
            cd ..

      - restore_cache:
          key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

      - run: npm ci
      - run: npx cypress verify

      - save_cache:
          key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache

      - run:
          name: 'Moon'
          command: /bin/bash -c "moonc *.moon && moonc **/*.moon"

      - run:
          name: 'Start cms'
          command: /bin/bash -c "lapis server"
          background: true

      - run:
          name: 'Run Cypress tests'
          command: npx cypress run
          no_output_timeout: '1m'

      - store_artifacts:
          path: cypress/screenshots
      - store_artifacts:
          path: cypress/videos

workflows:
  build:
    jobs:
      - cypress-test